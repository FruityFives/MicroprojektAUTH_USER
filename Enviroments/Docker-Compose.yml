services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 1234
    ports:
      - 27018:27017
    volumes:
      - mongodb_data:/data/db
    restart: always

  userservice1:
    build: ../UserService/UserServiceAPI
    container_name: userservice1
    ports:
      - 8081:8080
    environment:
      MongoConnectionString: "mongodb://admin:1234@mongodb:27017"
      DatabaseName: "UserDB"
      CollectionName: "users"
    depends_on:
      - mongodb
    restart: always

  userservice2:
    build: ../UserService/UserServiceAPI
    container_name: userservice2
    ports:
      - 8082:8080
    environment:
      MongoConnectionString: "mongodb://admin:1234@mongodb:27017"
      DatabaseName: "UserDB"
      CollectionName: "users"
    depends_on:
      - mongodb
    restart: always

  authservice:
    build:
      context: ../AuthService/AuthServiceAPI
    container_name: authservice-Haav
    ports:
      - 8083:8080
    environment:
      UserServiceUrl: "http://nginx-gateway"
      Secret: "MinSuperHemmeligeNÃ¸gle1234567890123456!"
      Issuer: "authServiceAPI"
    depends_on:
      - userservice1
      - userservice2
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - userservice1
      - userservice2
      - authservice
    restart: always

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always
    depends_on:
      - loki

volumes:
  mongodb_data:
  grafana_data:
